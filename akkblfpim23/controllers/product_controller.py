# -*- coding: utf-8 -*-

"""
    akkblfpim23.controllers.product_controller

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

from .base_controller import BaseController
from ..api_helper import APIHelper
from ..configuration import Configuration
from ..http.auth.o_auth_2 import OAuth2

class ProductController(BaseController):

    """A Controller to access Endpoints in the akkblfpim23 API."""


    def get_product(self):
        """Does a GET request to /rest/v1/products/AKNSTK.

        Assuming that the given identifier is the identifier of an existing
        product

        Returns:
            void: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _query_builder = Configuration.get_base_uri()
        _query_builder += '/rest/v1/products/AKNSTK'
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare and execute request
        _request = self.http_client.get(_query_url)
        OAuth2.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)

    def get_products(self,
                     content_type,
                     cookie):
        """Does a GET request to /rest/v1/products.

        TODO: type endpoint description here.

        Args:
            content_type (string): TODO: type description here. Example: 
            cookie (string): TODO: type description here. Example: 

        Returns:
            void: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _query_builder = Configuration.get_base_uri()
        _query_builder += '/rest/v1/products'
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare headers
        _headers = {
            'Content-Type': content_type,
            'Cookie': cookie
        }

        # Prepare and execute request
        _request = self.http_client.get(_query_url, headers=_headers)
        OAuth2.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)
